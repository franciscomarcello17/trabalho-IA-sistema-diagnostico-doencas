import streamlit as st
import fitz  # PyMuPDF
from groq import Groq
import os

# Caminho din√¢mico da logo
CURRENT_DIR = os.path.dirname(os.path.abspath(__file__))
LOGO_PATH = os.path.join(CURRENT_DIR, "logo.png")

# Configurar chave da Groq
GROQ_API_KEY = "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"
client = Groq(api_key=GROQ_API_KEY)

# Fun√ß√£o para extrair texto de PDFs cl√≠nicos
def extract_text_from_pdfs(uploaded_pdfs):
    text = ""
    for pdf in uploaded_pdfs:
        with fitz.open(stream=pdf.read(), filetype="pdf") as doc:
            for page in doc:
                text += page.get_text("text")
    return text

# Fun√ß√£o para interagir com a IA da Groq para diagn√≥sticos
def diagnosticar_com_groq(pergunta, contexto):
    response = client.chat.completions.create(
        model="llama-3.3-70b-versatile",
        messages=[
            {"role": "system", "content": "Voc√™ √© uma intelig√™ncia artificial m√©dica. Com base em relat√≥rios cl√≠nicos e exames enviados pelo usu√°rio em PDF, forne√ßa diagn√≥sticos preliminares ou hip√≥teses m√©dicas. Seja claro, mas alerte sempre ao final, usando uma frase padr√£o que o diagn√≥stico definitivo depende de avalia√ß√£o m√©dica profissional. Em casos aparentam ser mais extremos recomende que o usu√°rio busque atendimento m√©dico imediato e forneca contatos de emergencia."},
            {"role": "user", "content": f"{contexto}\n\nPergunta: {pergunta}"}
        ]
    )
    return response.choices[0].message.content

# Interface do Streamlit
def main():
    # Configura√ß√£o da p√°gina com √≠cone personalizado
    st.set_page_config(
        page_title="‚öïÔ∏è DiagnosticAI",
        page_icon="‚öïÔ∏è",  # Altere para um emoji ou caminho de imagem
        layout="centered"
    )
    
    # Imagem da logo (com largura responsiva)
    st.image(LOGO_PATH, use_container_width=True)

    # T√≠tulo centralizado com CSS
    st.markdown(
        """
        <style>
            .centered-title {
                text-align: center;
                font-size: 2.5rem !important;
                margin-bottom: 20px;
            }
        </style>
        <h1 class="centered-title">‚öïÔ∏è DiagnosticAI</h1>
        """,
        unsafe_allow_html=True
    )
    st.markdown("Carregue relat√≥rios m√©dicos ou exames em PDF e fa√ßa perguntas para obter um **diagn√≥stico preliminar automatizado**.")

    with st.sidebar:
        st.header("üìÑ Upload de Arquivos")
        uploaded_pdfs = st.file_uploader("Adicione seus PDFs cl√≠nicos", type="pdf", accept_multiple_files=True)

    if uploaded_pdfs:
        texto_extraido = extract_text_from_pdfs(uploaded_pdfs)
        st.session_state["texto_clinico"] = texto_extraido
        st.success("‚úÖ Relat√≥rios cl√≠nicos processados com sucesso!")

    pergunta_usuario = st.text_input("ü©∫ Qual √© a sua d√∫vida m√©dica?")

    if pergunta_usuario and "texto_clinico" in st.session_state:
        resposta = diagnosticar_com_groq(pergunta_usuario, st.session_state["texto_clinico"])
        st.markdown("### üßæ Resposta da IA:")
        st.write(resposta)

if __name__ == "__main__":
    main()
