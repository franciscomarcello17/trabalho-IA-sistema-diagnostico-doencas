import streamlit as st
import fitz  # PyMuPDF
from groq import Groq
import os

# Caminho din√¢mico da logo
CURRENT_DIR = os.path.dirname(os.path.abspath(__file__))
LOGO_PATH = os.path.join(CURRENT_DIR, "logo.png")

# Configurar chave da Groq
GROQ_API_KEY = "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"
client = Groq(api_key=GROQ_API_KEY)

# Fun√ß√£o para extrair texto de PDFs
def extract_text_from_pdfs(uploaded_pdfs):
    text = ""
    for pdf in uploaded_pdfs:
        try:
            with fitz.open(stream=pdf.read(), filetype="pdf") as doc:
                for page in doc:
                    text += page.get_text("text")
            st.success(f"‚úÖ PDF '{pdf.name}' processado com sucesso!")
        except Exception as e:
            st.error(f"‚ùå Erro ao ler o PDF '{pdf.name}': {e}")
    return text

# Fun√ß√£o para interagir com a IA da Groq para diagn√≥sticos
def diagnosticar_com_groq(pergunta, contexto=None):
    messages = [
        {
            "role": "system",
            "content": """Voc√™ √© uma intelig√™ncia artificial m√©dica especializada em an√°lise preliminar de condi√ß√µes de sa√∫de. 
            Suas responsabilidades incluem:
            
            1. Analisar sintomas descritos pelo usu√°rio com precis√£o e cuidado
            2. Interpretar relat√≥rios cl√≠nicos e resultados de exames quando fornecidos
            3. Oferecer informa√ß√µes m√©dicas baseadas em evid√™ncias cient√≠ficas
            4. Sugerir poss√≠veis condi√ß√µes relacionadas (como diagn√≥stico diferencial)
            5. Recomendar quando procurar atendimento m√©dico
            6. Fornecer contatos de emerg√™ncia quando necess√°rio
            
            Restri√ß√µes obrigat√≥rias:
            - NUNCA afirme que seu diagn√≥stico √© definitivo
            - Em casos potencialmente graves (como dor no peito, dificuldade respirat√≥ria, sangramentos intensos):
              * Recomende busca imediata de atendimento m√©dico
              * Forne√ßa n√∫meros de telefone de emerg√™ncia locais
              * Descreva sinais de alarme para observar
            - Para quest√µes n√£o m√©dicas, responda apenas: "Desculpe, s√≥ posso ajudar com quest√µes m√©dicas"
            - Caso o arquivo n√£o tenha relac√£o com medicina, avise o usu√°rio e n√£o processe o arquivo
            - Em quest√µes m√©dicas, inclua a frase: "Este √© apenas um parecer preliminar - o diagn√≥stico definitivo requer avalia√ß√£o m√©dica profissional." como um par√°grafo final
            - Mantenha tom profissional, emp√°tico e sem alarmismo desnecess√°rio"""
        },
    ]
    
    if contexto:
        messages.append({"role": "user", "content": f"Contexto dos exames:\n{contexto}\n\nPergunta: {pergunta}"})
    else:
        messages.append({"role": "user", "content": pergunta})
    
    response = client.chat.completions.create(
        model="llama-3.3-70b-versatile",
        messages=messages
    )
    return response.choices[0].message.content

# Interface do Streamlit
def main():
    # Configura√ß√£o da p√°gina
    st.set_page_config(
        page_title="DiagnosticAI",
        page_icon="‚öïÔ∏è",
        layout="centered"
    )

    # Estilo customizado
    st.markdown("""
    <style>
    .reportview-container {
        background-color: #f5f7fa;
    }
    .main {
        background-color: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    .stTextInput>div>div>input, .stTextArea textarea {
        background-color: #eef2f7;
    }
    .pergunta-container {
        position: relative;
    }
    .enviar-btn {
        position: absolute;
        bottom: 10px;
        right: 10px;
        border: none;
        background-color: #3b82f6;
        color: white;
        border-radius: 50%;
        width: 38px;
        height: 38px;
        cursor: pointer;
        font-size: 20px;
    }
    .enviar-btn:hover {
        background-color: #2563eb;
    }
    .centered-title {
        text-align: center;
        font-weight: 600;
        font-size: 22px;
        margin-top: 1.5rem;
        margin-bottom: 0.5rem;
    }
    </style>
    """, unsafe_allow_html=True)

    # Logo
    with st.container():
        st.image(LOGO_PATH, use_container_width=True)

    # Upload na barra lateral
    with st.sidebar:
        st.header("üìÑ Upload de Arquivos")
        uploaded_pdfs = st.file_uploader("Adicione relat√≥rios ou exames cl√≠nicos (PDF)", type="pdf", accept_multiple_files=True)

    # Processar PDFs enviados
    if uploaded_pdfs:
        texto_extraido = extract_text_from_pdfs(uploaded_pdfs)
        st.session_state["texto_clinico"] = texto_extraido
        with st.expander("üìÑ Visualizar texto cl√≠nico extra√≠do"):
            st.text(texto_extraido)

    # T√≠tulo centralizado
    st.markdown('<div class="centered-title">ü©∫ Digite sua d√∫vida m√©dica</div>', unsafe_allow_html=True)

    # Input com bot√£o dentro
    with st.form("form_pergunta", clear_on_submit=True):
        st.markdown('<div class="pergunta-container">', unsafe_allow_html=True)
        pergunta_usuario = st.text_area("", height=100, placeholder="Digite sua pergunta aqui...")
        st.markdown('<button class="enviar-btn" type="submit">‚Üë</button>', unsafe_allow_html=True)
        st.markdown('</div>', unsafe_allow_html=True)
        submitted = st.form_submit_button("Enviar", type="primary")

    if submitted and pergunta_usuario.strip():
        contexto = st.session_state.get("texto_clinico", None)
        resposta = diagnosticar_com_groq(pergunta_usuario, contexto)
        st.markdown("### üßæ Resposta da IA:")
        st.markdown(f"""
        <div style="background-color: #e8f0fe; padding: 1rem; border-radius: 10px; border-left: 5px solid #3b82f6;">
        {resposta}
        </div>
        """, unsafe_allow_html=True)

    # Rodap√©
    st.markdown("---")
    st.markdown("""
    <center><small>‚ö†Ô∏è As respostas fornecidas s√£o apenas pareceres preliminares e <strong>n√£o substituem avalia√ß√£o m√©dica profissional</strong>.</small></center>
    """, unsafe_allow_html=True)

if __name__ == "__main__":
    main()
